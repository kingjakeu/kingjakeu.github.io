REST
Reprensentional state Transfer
자원의 상태를 주고 받는 통신
http 메소드를 통해 행위를 나타내고 uri로 자원을 나타냄 

동등성과 동일성의 차이를 아는지?
동등성이란 두개의 객체가 완전히 같을때
동일성이란 두개의 객체의 정보가 같을 떄

세션이 뭔가요? 서버 여러 대일 때 세션을 어떻게 처리하죠?
서버에 저장하는 클라이언트의 상태를 말합니다.
서버가 여러대일 경우 동일한 세션 저장소를 사용하거나
세션 클러스터링을 통해 세션을 처리 및 관리 할 수 있습니다.

서블릿이 뭔가요?
웹기반의 요청을 request-reponse 형식의 프로그래밍 모델로 접근 하여 처리 할수 있게하는 자바 클래스

데이터베이스 인덱스 동작 과정
인덱스 정보들을 따로 저장 b-tree가 주로 사용됌, 여기서 range scan을 통해 검색

캐시가 무엇인가요? redis 같은 걸 캐싱 서버로 사용해보신적 있으신가요?
캐시란 응답데이터 혹은 데이터들을 메모리에 저장해두는것을 말함.

Call by value와 Call by reference 차이
call by value의 경우, value 자체를 들고 메소드로 넘어가 동작
call by reference의 경우 value의 reference 값을 들고가 동작

TDD에 대해 어떻게 생각하시나요?
할 수 있다면 좋겠죠

TDD가 무엇인가요?
test-driven development로, 테스트를 먼저 작성하고 개발을 하는 개발 방식

TDD의 장, 단점?
장점 안전한 코드

PreparedStatment와 Statement의 차이는 무엇인가요?
preparedstatement는 처음 실행될때 컴파일을 하고 결과 값을 캐시에 저장한다.
다음에 사용할때 동적으로 인자만 바꿔서 사용할 수 있다
statement는 매번 실행될때 컴파일을 하며, 동적으로 인자를 바꾸는 것이 아닌 완성된 sql 
단일 성능은 statement가 좋음 

전 프로젝트에서 배포 구조 설명해주세요.
그 방법으로 하면 완전한 무중단 배포가 구현이 될까요?

nginx가 어떤 방식으로 로드밸런싱을 할 지 설명해주세요.
잘 모르시면, 어떻게 구현 되어있을 지 추측해서 설명해주세요.
클린코드
클린코드의 정의가 무엇인가요?
클린코드가 뭐라고 생각하는지?
Docker 왜 썼는지?
본인이 생각하기에 Database의 부하와 Application의 부하를 어떤 기준으로 나눌 것 같은지?

만약에 일을 하게 됐을 때 그 팀이 코드 리뷰에 대해 보수적이고 페어를 완강하게 거부하는 곳이라면 어떻게 대처할 건지

Deep Copy와 Shallow Copy에 대해 설명해주세요.
depp copy는 내용 그 자체를 전부 복사, shallow copy는 참조를 복사

OAuth 의 흐름에 대해 설명해주세요.
1. 앱 to 사용자 권한 요청 
2. 사용자 to 앱 권한 허용 요청
3. 앱 -> 인증서버 사용자 토큰 요청
4. 인증서버 -> 앱 접근 토큰 재공
5. 접근 토큰 -> 데이터 서버 

객체를 나누는 기준이 무엇인가?

커밋 컨벤션에서 feat, chore, refactor 등. 각각 어떤 기준으로 나누어 사용했는지?
feat- 새로운 기능 추가
fix- 버그픽스
chore- 빌드 업무 수정, 패키지 매니저 수정
docs-문서 수정
style-코드변경없는 코드 포매팅 수정
refactor- 코드 리팩토링
test- 테스트 코드 수정

OOP가 무엇인가요?
object oriented programming으로 데이터들을 객체화 객체들과의 상호작용으로 동작하도록 만드는 프로그래밍
S-single responsiblity - 하나의 책임만을
O-open closed principle 확장은쉽게, 기본것들 수정을 최소로
L-liskpov 치환, 부모의 자리에 자식이 가도 완벽히 동작하게
I-interface segregation, 하나의 인터페이스가 모두를 동작하는것이 아닌, 여러개로
D-dependcy inversion, 거의 변화가 없는곳에 의존, 구체적 클래스보다 인터페이스에

OOP를 썼을 때 어떤 점이 좋았고 안좋았는지?
OOP를 잘하기 위해 어떤 노력을 했는지?
객체를 나누다 보면 오히려 코드가 보기 힘들지 않나?

클린 코드는 무엇인가요?
왜 코드는 클린해야 하죠?
Test코드는 왜 짜야 합니까?

Mock을 사용한 이유는?

기능이 정상 동작하려면 데이터베이스(외부)를 의존해야 하는데 왜 이 의존을 끊으려고 하는지?
사전에서 검색을 제공하는 Application을 만들건데 어떤 자료구조를 쓰실 건가요?

기억에 남는 프로젝트와 어떤 점에서 기억에 남는 지 설명해주세요.
여기서 아쉬웠던 점을 설명해주시고, 어떻게 개선했는지? 아니면 개선 방안을 설명해주세요.

트리 구조에 대해 설명 해주세요.
이진 트리에 대해 설명 해주세요.
Binary Search Tree에 대해 설명해주세요.

브라우저에서 서버 응답까지의 흐름
도메인 서버를 찾는다 tld를 통해 해당 도메인 서버를 찾고
도메인서버를 통해 url의 ip주소를 알아낸다
ip 주소를 이용 arp를 이용 해당 맥어드레스를 FF:FF로 놓고 브로드케스팅
응답하는 맥주소가 해당 웹서버의 주소, 연결 요청

CI/CD 에 대해 각각 설명해주세요.
ci cd란, 애플리케이션 개발 단계를 자동화하여, 이용자들에게 보다 짧은 주기로 제공하는것
ci는 개발과 머지, 테스트 작업을 자동화
cd는 변경사항을 레포에 업데이트 자동으로릴리즈 배포되는 작업


최근에 하신 프로젝트가 어떤 구조로 되어있는지 그림으로 그리면서 설명해주세요.
프로젝트에서 Git flow 적용 하셨다고 하셨는데, 어떤 식으로 하셨는지 설명해주세요.
어떤 장점, 단점이 있는지?
DTO가 무엇이죠?

Presentation - Application - Domain Layer를 나눈 기준은?
각 Layer가 하는 역할은?
DB Optimizer

아는 정렬 알고리즘 설명해주세요
그 정렬 알고리즘의 시간복잡도는 어떻게 되나요

프로세스와 쓰레드의 차이점은?
PCB에 저장되는 정보는 어떤 것들이 있나요?
Context Switching에 대해 설명해 주세요.

TCP 와 UDP의 차이점에 대해 설명해 주세요.
프로젝트에서 단위 테스트 어떻게 하셨나요? 통합 테스트는 어떻게 하셨나요?
알고 계신 테스트의 종류를 말씀해주세요. (유닛 테스트, 통합 테스트 등…)

각 테스트들에 대해 설명해주세요.
로컬 개발 환경에서도 도커를 활용해서 개발하셨는지?
OOP를 지향하기 위해 어떤 노력을 할 수 있는지?

Layered Architecture에서 Presentation, Application, Domain, InfraStructure layer의 역할에 대해 설명해 주세요.
DDD에 대해 알거나 공부해봤는지?
DDD에서 Domain이 무엇인지?
CQRS, 이벤트 소싱에 대해 아는지?
최근 했던 프로젝트의 패키지 구조에 대해 설명해주세요. (선호하는 패키지 구조)
Connection Pool을 쓰는 이유는? 단순히 커넥션을 새로 만드는 것과 차이는?
그러면 Connection을 만드는 시간을 제외하고는 다른 장점은 없나요?
Connection Pool의 최대치가 1000개, WAS가 5개라고 해보자. 각 WAS는 200개씩의 Connection을 가지는지? 그렇다면 6번째 WAS가 추가된다면 6번째에는 아무런 Connection도 할당되지 않는지?

SOLID중 한가지 설명해주세요.
재귀의 장점, 단점?

Sync vs. Async 차이
MyISAM과 InnoDB의 차이점
단방향 암호화의 장점이 뭐냐
GET/POST의 차이는?
HTTP vs. HTTPS의 차이는?

XSS 에 대해 설명해주세요
XSS 를 막기 위해서는 어떤 방법이 있는지?
인증 토큰 방식과 세션을 통한 인증 방식은 어떤 점에서 다른지?
백엔드 단에서 성능을 올릴 수 있는 방법은?

데이터베이스에서 왜 여러 테이블을 두는지?
최근에 했던 프로젝트 구조를 화이트보드 이용해서 설명해주세요.
Inner Join과 Outer Join에 대해 설명해주세요.
보통 면접에선 이런거 물어보던데~ 했는데 혹시 저희가 물어보지 않아서 아쉬웠던 질문이 있나요? 있으시면 질문과 함께 답변 해주세요.
마지막으로, 준비 많이 해왔는데~ 또는 이건 꼭 답하고 가고 싶다 하는 내용 있으신가요?

Github의 장점은?
Git에서 써본 명령어들은 어떤게 있나요?
그 명령어들에 대해서 설명해주세요.
코드 스멜을 느끼게 되는 기준은 어떻게 되시나요?
코드 스멜을 느끼게 되는 것을 경험 기반으로 설명해주세요.
Blue-Green 배포에 대해 설명해주세요.
구현 하신 부분에서 개선할 점이 있다면 어떤 것이 있는지?
그 외에 무중단 배포 방법 아시는 것 설명해주세요.
쿠키에 대해서 설명해주세요.
로컬 스토리지에 대해 설명해주세요.
프론트와 API 서버간에 어떻게 통신을 하는지, 구현을 어떻게 했는지 설명해주세요
HTTP Method에 대해서 각각 설명해주세요.
PUT은 update만 되나요?
CLOSE_WAIT, TIME_WAIT에 대해 설명해주세요.
이벤트 같은 것을 할 때(순간적으로 트래픽이 높아질 수 있는 순간) 아키텍처적으로 어떻게 설계할 것인지?
쿼리 잘 짜세요?
Web Server와 WAS의 차이점, 각각 설명해주세요.
사용할 수 있는, 사용해본 프로그래밍 언어는 어떤 것들이 있는지? 각각 어느정도의 수준인지?
정규표현식에서 =?를 부르는 이름은? 그 외 정규표현식 질문들 (어떤 정규표현식이 뜻하는 의미 해석이라던가)
WebSocket 사용할 때 기본 프로토콜을 사용했는지? 아니면 직접 구현한 프로토콜을 사용했는지? (어떤 의미인지 모르겠음)
Reactive programming과 Observable에 관해 설명해주세요.
Reactive programming과 함수형 프로그래밍은 어떤 차이가 있는지 각각 어떤 특징이 있는지 설명해주세요.
정적타이핑 언어와 동적타이핑 언어의 장, 단점을 설명해주세요.
Http 제외하고 다른 프로토콜에 대해 아시는 거 설명해주세요.
Non Blocking I/O와 Blocking I/O에 대해서 설명해주시고, 각각 어떤 곳에 사용되는지 예시를 들어주세요.
List의 장점을 Array와 비교하여 설명해주세요.
테스트가 무엇인가요?
테스트를 왜 작성하셨나요?
본인만의 리팩토링에 대한 정의?
리팩토링은 어느 시점에 해야할까요?
유연한 코드는 무엇인가요?
응집도 vs. 결합도
테스트하기 쉬운 코드는 어떤 코드인가요?

자주사용하는 redis
keys GET
자료구조 string,

